version: '3.8'

services:
    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq
        ports:
            - '5672:5672'
            - '15672:15672'
        networks:
            - app-network
        restart: on-failure:5
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:15672']
            interval: 10s
            timeout: 5s
            retries: 5

    postgres:
        image: postgres:15
        container_name: postgres
        environment:
            POSTGRES_USER: ${DB_USERNAME:-postgres}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
            POSTGRES_DB: ${DB_DATABASE:-restaurants}
        ports:
            - '5432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME:-postgres}']
            interval: 5s
            timeout: 5s
            retries: 5

    order-service:
        build: ./order-service
        env_file:
            - .env
        ports:
            - '3000:3000'
        depends_on:
            rabbitmq:
                condition: service_healthy
            postgres:
                condition: service_healthy
        networks:
            - app-network
        restart: on-failure:5

    kitchen-service:
        build: ./kitchen-service
        env_file:
            - .env
        depends_on:
            rabbitmq:
                condition: service_healthy
            postgres:
                condition: service_healthy
        networks:
            - app-network
        restart: on-failure:5

    notification-service:
        build: ./notification-service
        env_file:
            - .env
        depends_on:
            rabbitmq:
                condition: service_healthy
            postgres:
                condition: service_healthy
        networks:
            - app-network
        restart: on-failure:5

volumes:
    postgres_data:

networks:
    app-network:
        driver: bridge
